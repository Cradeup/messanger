[{"C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\reportWebVitals.js":"1","C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\App.js":"2","C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\window\\window.js":"3","C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\window\\contacts\\contactsParrent.js":"4","C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\window\\contacts\\ContactsParrent.js":"5","C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\window\\chat\\ChatParrent.js":"6","C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\window\\contacts\\contact\\contactParrent.js":"7","C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\index.js":"8","C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\redux\\reducers\\chatReducer.js":"9","C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\window\\chat\\selectChat.js":"10","C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\window\\chat\\chat.js":"11","C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\window\\chat\\message.js":"12","C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\window\\chat\\chat-input\\chat-input.js":"13","C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\redux\\actions.js":"14","C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\redux\\types.js":"15","C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\window\\chat\\chatCompanionCard.js":"16","C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\window\\contacts\\contact\\wantedContacts.js":"17","C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\redux\\store.js":"18","C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\redux\\reducers\\rootReducer.js":"19","C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\redux\\reducers\\usersReducer.js":"20","C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\redux\\reducers\\dialogsReducer.js":"21","C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\fetch-json.js":"22"},{"size":362,"mtime":1606394133359,"results":"23","hashOfConfig":"24"},{"size":180,"mtime":1613471748652,"results":"25","hashOfConfig":"24"},{"size":361,"mtime":1614331078221,"results":"26","hashOfConfig":"24"},{"size":255,"mtime":1612363871376,"results":"27","hashOfConfig":"28"},{"size":2492,"mtime":1614336223439,"results":"29","hashOfConfig":"24"},{"size":746,"mtime":1613830595098,"results":"30","hashOfConfig":"24"},{"size":1632,"mtime":1614331723101,"results":"31","hashOfConfig":"24"},{"size":721,"mtime":1612716478524,"results":"32","hashOfConfig":"24"},{"size":2678,"mtime":1614343699510,"results":"33","hashOfConfig":"24"},{"size":409,"mtime":1613654885905,"results":"34","hashOfConfig":"24"},{"size":2385,"mtime":1614340822755,"results":"35","hashOfConfig":"24"},{"size":268,"mtime":1614006336424,"results":"36","hashOfConfig":"24"},{"size":2538,"mtime":1613918592262,"results":"37","hashOfConfig":"24"},{"size":2880,"mtime":1614335081013,"results":"38","hashOfConfig":"24"},{"size":732,"mtime":1614336139201,"results":"39","hashOfConfig":"24"},{"size":432,"mtime":1614339151328,"results":"40","hashOfConfig":"24"},{"size":1154,"mtime":1614173066594,"results":"41","hashOfConfig":"24"},{"size":299,"mtime":1612514473281,"results":"42","hashOfConfig":"24"},{"size":314,"mtime":1614170419121,"results":"43","hashOfConfig":"24"},{"size":452,"mtime":1614170259317,"results":"44","hashOfConfig":"24"},{"size":741,"mtime":1614333944535,"results":"45","hashOfConfig":"24"},{"size":93,"mtime":1614171056534,"results":"46","hashOfConfig":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"em9t80",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10z5bbh",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"49"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"49"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\reportWebVitals.js",[],["98","99"],"C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\App.js",[],"C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\window\\window.js",["100"],"import './window.css'\r\nimport ContactsParrent from './contacts/ContactsParrent'\r\nimport ChatParrent from './chat/ChatParrent'\r\nimport { fetchJSON } from '../fetch-json'\r\n\r\nfunction Window() {\r\n    return (\r\n        <div className='window-parrent'>\r\n            <ContactsParrent />\r\n            <ChatParrent />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Window;","C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\window\\contacts\\contactsParrent.js",[],"C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\window\\contacts\\ContactsParrent.js",["101"],"import ContactParrent from './contact/contactParrent'\r\nimport './contacts-parrent.css'\r\nimport { connect } from \"react-redux\";\r\nimport React, { useRef } from 'react'\r\nimport { fetchDialogs, onContactsSearchInputChange } from '../../redux/actions';\r\nimport WantedContact from './contact/wantedContacts';\r\n\r\nfunction ContactsParrent(props) {\r\n\r\n    function getDialogs() {\r\n        if (props.dialogsFetchStatus === 'waiting') {\r\n            let action = fetchDialogs()\r\n            props.dispatch(action)\r\n        }\r\n    }\r\n\r\n\r\n    getDialogs();\r\n\r\n    const contactsSearchInput = useRef(null)\r\n    let findedContacts = []\r\n    let dialogs\r\n    props.users.map((user) => {\r\n        if (user.id !== props.actualUserId) {\r\n            if (user.nickName.toLowerCase().includes(props.contactsWanted.toLowerCase()) || (user.firstName.toLowerCase() + ' ' + user.secondName.toLowerCase()).includes(props.contactsWanted.toLowerCase())) {\r\n                findedContacts.push(props.users.find(userFromState => userFromState.id === user.id))\r\n            }\r\n        }\r\n    })\r\n    if (props.dialogsFetchStatus === 'loaded') {\r\n        dialogs = props.dialogs.map(dialog => <ContactParrent dialog={dialog} key={dialog.id} />)\r\n    }\r\n    if (contactsSearchInput.current) {\r\n        if (props.contactsWanted !== '') {\r\n            dialogs = findedContacts.map(findedContact => <WantedContact props={findedContact} key={findedContact.id} />)\r\n        }\r\n    }\r\n\r\n    function searchedContacts(event) {\r\n        if (contactsSearchInput.current) {\r\n            let wanted = contactsSearchInput.current.value\r\n            let action = onContactsSearchInputChange(wanted)\r\n            props.dispatch(action)\r\n\r\n        }\r\n    }\r\n    return (\r\n        <div className='contacts-parrent'>\r\n            <div className='contacts-par-header'></div>\r\n            <div className=\"contacts-search\">\r\n                <input ref={contactsSearchInput} onInput={(event) => searchedContacts(event)} className=\"contacts-search-input\" placeholder=\"Найти...\"></input>\r\n            </div>\r\n            {dialogs}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        dialogs: state.dialogsReducer.dialogs,\r\n        users: state.chatReducer.users,\r\n        contactsWanted: state.chatReducer.contactsWanted,\r\n        actualUserId: state.chatReducer.actualUserId,\r\n        dialogsFetchStatus: state.dialogsReducer.status\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(ContactsParrent)","C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\window\\chat\\ChatParrent.js",[],"C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\window\\contacts\\contact\\contactParrent.js",["102","103"],"import './contact-parrent.css'\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ContactParrent(props) {\r\n    let { firstName, secondName, profileImage } = props.users.find(user => user.id === props.dialog.members.find(member => member !== props.actualUserId))\r\n    let lastMessageImageSrc = props.users.find(user => user.id === props.dialog.lastMessage.id).profileImage\r\n    \r\n    return (\r\n        <Link to={props.dialog.id}>\r\n            <div className='contact-parrent'>\r\n                <div>\r\n                    <div className='dialogs-profile-img-par'>\r\n                        <img className='dialogs-profile-img' src={profileImage}/>\r\n                    </div>\r\n                    <div className='dialog-content-par'>\r\n                        <div className='dialog-profile-name'>\r\n                            {firstName + ' '}\r\n                            {secondName}\r\n                        </div>\r\n                        <div className='last-message-img-par'>\r\n                            <img className='last-message-img' src={lastMessageImageSrc} />\r\n                        </div>\r\n                        <div className='dialog-profile-last-message'>\r\n                            {props.dialog.lastMessage.message}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        users: state.chatReducer.users,\r\n        actualUserId: state.chatReducer.actualUserId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(ContactParrent)","C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\index.js",[],"C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\redux\\reducers\\chatReducer.js",[],"C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\window\\chat\\selectChat.js",[],"C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\window\\chat\\chat.js",["104","105"],"import './chat.css'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from \"react-redux\";\r\nimport { Message } from './message';\r\nimport ChatInput from './chat-input/chat-input';\r\nimport ChatCompanionCard from './chatCompanionCard';\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { fetchMessages } from '../../redux/actions';\r\n\r\nfunction Chat(props) {\r\n    const chat = useRef(null)\r\n    let dialogId = props.match.params.id\r\n    let data = { actualUserId: props.actualUserId, dialogId: dialogId }\r\n    function getMessages() {\r\n        let action = fetchMessages(data)\r\n        props.dispatch(action)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (chat.current) {\r\n            chat.current.scrollTop = chat.current.scrollHeight;\r\n        }\r\n\r\n    })\r\n    useEffect(() => {\r\n        getMessages()\r\n    }, [dialogId])\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    let dialog\r\n    if (props.messagesStatus === 'loaded' && props.dialogsStatus === 'loaded') {\r\n        dialog = props.chat.messages.map(message => { if (props.actualUserId !== message.senderId) { return <Message styleMove={\"flex-start\"} styleBorder={\"12px 12px 12px 0px\"} message={message} key={message.messageId} /> } else { return <Message styleMove={\"flex-end\"} styleBorder={\"12px 12px 0px 12px\"} styleColor={\"#ededed\"} message={message} key={message.messageId} /> } })\r\n    }\r\n\r\n    let companion = props.users.find(user => user.id === props.dialogs.find(dialog => dialog.id === dialogId).members.find(member => member !== props.actualUserId))\r\n\r\n    // console.log(dialog)\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"chat-parrent-inner\">\r\n            <div className=\"chat-header\">\r\n                <ChatCompanionCard props={companion} />\r\n            </div>\r\n            <div className='chat-inner'>\r\n                <div ref={chat} className='chat' id=\"chat\">\r\n                    {dialog}\r\n                </div>\r\n                <ChatInput />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        chat: state.chatReducer.chat,\r\n        actualUserId: state.chatReducer.actualUserId,\r\n        dialogs: state.dialogsReducer.dialogs,\r\n        dialogsStatus: state.dialogsReducer.status,\r\n        users: state.chatReducer.users,\r\n        messagesStatus: state.chatReducer.status\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(withRouter(Chat))","C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\window\\chat\\message.js",[],"C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\window\\chat\\chat-input\\chat-input.js",[],"C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\redux\\actions.js",[],"C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\redux\\types.js",[],"C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\window\\chat\\chatCompanionCard.js",["106"],"import './chatCompanionCard.css'\r\n\r\nfunction ChatCompanionCard(props) {\r\n    return (\r\n        <div className=\"chat-companion-card-parrent\">\r\n                <img className=\"chat-companion-img\" src={props.props.profileImage} />\r\n            <div className=\"chat-companion-name\">\r\n                {props.props.firstName + ' ' + props.props.secondName}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatCompanionCard","C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\window\\contacts\\contact\\wantedContacts.js",["107"],"import './wantedContact.css'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction WantedContact(props) {\r\n    let wantedContactDialogId = props.dialogs.find(dialog => dialog.members.includes(props.props.id || props.actualUserId)).id\r\n    return (\r\n        <Link to={wantedContactDialogId}>\r\n            <div className='searched-contact-parrent'>\r\n                <div className='searched-profile-img-par'>\r\n                    <img className='searched-profile-img' src={props.props.profileImage} />\r\n                </div>\r\n                <div className='searched-content-par'>\r\n                    <div className='searched-profile-name'>\r\n                        {props.props.firstName + ' '}\r\n                        {props.props.secondName}\r\n                    </div>\r\n                </div>\r\n            </ div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        users: state.chatReducer.users,\r\n        actualUserId: state.chatReducer.actualUserId,\r\n        dialogs: state.dialogsReducer.dialogs,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(WantedContact)","C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\redux\\store.js",[],"C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\redux\\reducers\\rootReducer.js",[],"C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\redux\\reducers\\usersReducer.js",[],"C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\redux\\reducers\\dialogsReducer.js",[],"C:\\Users\\Костя\\Documents\\react-projects\\projects\\01\\messanger\\src\\fetch-json.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":4,"column":10,"nodeType":"114","messageId":"115","endLine":4,"endColumn":19},{"ruleId":"116","severity":1,"message":"117","line":23,"column":28,"nodeType":"118","messageId":"119","endLine":23,"endColumn":30},{"ruleId":"120","severity":1,"message":"121","line":14,"column":25,"nodeType":"122","endLine":14,"endColumn":82},{"ruleId":"120","severity":1,"message":"121","line":22,"column":29,"nodeType":"122","endLine":22,"endColumn":91},{"ruleId":"112","severity":1,"message":"123","line":7,"column":36,"nodeType":"114","messageId":"115","endLine":7,"endColumn":44},{"ruleId":"124","severity":1,"message":"125","line":27,"column":8,"nodeType":"126","endLine":27,"endColumn":18,"suggestions":"127"},{"ruleId":"120","severity":1,"message":"121","line":6,"column":17,"nodeType":"122","endLine":6,"endColumn":86},{"ruleId":"120","severity":1,"message":"121","line":11,"column":21,"nodeType":"122","endLine":11,"endColumn":92},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'fetchJSON' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMessages'. Either include it or remove the dependency array.","ArrayExpression",["130"],"no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},"Update the dependencies array to be: [dialogId, getMessages]",{"range":"133","text":"134"},[840,850],"[dialogId, getMessages]"]